//TD3 HLIN511

//Q10
SELECT NUM_AB, NOM, (TARIF * (REDUC/100))
FROM ABONNE
WHERE REDUC IS NOT NULL
AND (TARIF * (REDUC/100)) < 20;

//Q11
SELECT LIVRE.ISBN, TITRE, COUNT(*)
FROM LIVRE, EXEMPLAIRE
WHERE LIVRE.ISBN = EXEMPLAIRE.ISBN
AND CATEGORIE = 'ROMAN'
GROUP BY LIVRE.ISBN, TITRE

//Q12
SELECT LIVRE.ISBN, TITRE, COUNT(*)
FROM LIVRE, EXEMPLAIRE
WHERE LIVRE.ISBN = EXEMPLAIRE.ISBN
AND CATEGORIE = 'EXCLU'
GROUP BY LIVRE.ISBN, TITRE
HAVING COUNT(*) >= 2;

//Q13
SELECT ABONNE.NUM_AB, NOM
FROM (SELECT ABONNE.NUM_AB, NOM, COUNT(*) AS NBEMPRUNT
	FROM ABONNE, EMPRUNT
	WHERE ABONNE.NUM_AB = EMPRUNT.NUM_AB
	ORDER BY ABONNE.NUM_AB, NOM) A
WHERE NBEMPRUNT = (SELECT MAX(NBEMPRUNT) FROM A);

//Q14
SELECT ISBN, TITRE, COUNT(*)
FROM EMPRUNT, EXEMPLAIRE, LIVRE
WHERE EMPRUNT.NUM_EX = NUMERO AND EXEMPLAIRE.ISBN = LIVRE.ISBN
ORDER BY ISBN, TITRE
HAVING COUNT(*) >= (SELECT COUNT(*)
FROM EMPRUNT, EXEMPLAIRE, LIVRE
WHERE EMPRUNT.NUM_EX = NUMERO AND EXEMPLAIRE.ISBN = LIVRE.ISBN
AND TITRE = 'LE MUR');

//Q15
SELECT *
FROM EXEMPLAIRE
WHERE NOT EXISTS (
	SELECT *
	FROM ABONNE
	WHERE NOT EXISTS (
		SELECT *
		FROM EMPRUNT
		WHERE EMPRUNT.NUM_AB = ABONNE.NUM_AB
		AND NUMERO = EMPRUNT.NUM_EX));

//Q16
SELECT *
FROM ABONNE
WHERE NOT EXISTS (
	SELECT *
	FROM EXEMPLAIRE, LIVRE, CATEGORISE
	WHERE EXEMPLAIRE.ISBN = LIVRE.ISBN AND LIVRE.ISBN = CATEGORISE.ISBN
	AND MOT = 'INFORMATIQUE' AND CATEGORIE = 'SCIENCE'
	AND NOT EXISTS (
		SELECT *
		FROM EMPRUNT
		WHERE EMPRUNT.NUM_AB = ABONNE.NUM_AB
		AND NUMERO = EMPRUNT.NUM_EX));
